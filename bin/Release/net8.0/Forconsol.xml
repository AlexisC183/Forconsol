<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Forconsol</name>
    </assembly>
    <members>
        <member name="T:Forconsol.Estadistica">
            <summary>
            Proporciona métodos de extensión para cálculos estadísticos.
            </summary>
        </member>
        <member name="M:Forconsol.Estadistica.Mediana``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Calcula la mediana de una secuencia de valores <see><typeparamref name="T"/></see>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="numeros">Una secuencia de valores <typeparamref name="T"/> de la cual calcular la mediana.</param>
            <returns>La mediana de la secuencia de valores.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Forconsol.Estadistica.Moda``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Calcula la moda de una secuencia de valores <see><typeparamref name="T"/></see>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="numeros">Una secuencia de valores <typeparamref name="T"/> de la cual calcular la moda.</param>
            <returns>Una <see cref="T:System.Collections.Generic.IEnumerable`1"/> que contiene la moda de la secuencia fuente.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Forconsol.Estadistica.Rango``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Calcula el rango de una secuencia de valores <see><typeparamref name="T"/></see>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="numeros">Una secuencia de valores <typeparamref name="T"/> de la cual calcular el rango.</param>
            <returns>El rango de la secuencia de valores.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:Forconsol.Fraccion">
            <summary>
            Representa un número racional expresado en forma fraccionaria. Al crear una instancia de <see cref="T:Forconsol.Fraccion"/> puede que se efectúe un proceso de simplificación.
            </summary>
        </member>
        <member name="M:Forconsol.Fraccion.#ctor(System.Int32,System.Int32)">
            <summary>
            Inicializa una nueva instancia de la estructura <see cref="T:Forconsol.Fraccion"/> al numerador y denominador especificados.
            </summary>
            <param name="numerador">El numerador.</param>
            <param name="denominador">El denominador (diferente que 0).</param>
            <exception cref="T:System.DivideByZeroException"></exception>
        </member>
        <member name="P:Forconsol.Fraccion.Cero">
            <summary>
            Obtiene un objeto <see cref="T:Forconsol.Fraccion"/> que representa cero enteros (0 / 1).
            </summary>
            <returns>Un objeto cuyo valor es cero enteros.</returns>
        </member>
        <member name="P:Forconsol.Fraccion.Denominador">
            <summary>
            Obtiene el denominador representado por esta instancia.
            </summary>
            <returns>El denominador, en su forma simplificada si fue posible.</returns>
        </member>
        <member name="P:Forconsol.Fraccion.Epsilon">
            <summary>
            Obtiene un objeto <see cref="T:Forconsol.Fraccion"/> que representa 1 / 1000000000.
            </summary>
            <returns>Un objeto cuyo valor es el número mayor que cero más pequeño que puede ser representado por una <see cref="T:Forconsol.Fraccion"/>.</returns>
        </member>
        <member name="P:Forconsol.Fraccion.MaxValue">
            <summary>
            Obtiene un objeto <see cref="T:Forconsol.Fraccion"/> que representa 2147483647 / 1.
            </summary>
            <returns>Un objeto cuyo valor es el número más grande que puede ser representado por una <see cref="T:Forconsol.Fraccion"/>.</returns>
        </member>
        <member name="P:Forconsol.Fraccion.MinValue">
            <summary>
            Obtiene un objeto <see cref="T:Forconsol.Fraccion"/> que representa -2147483648 / 1.
            </summary>
            <returns>Un objeto cuyo valor es el número más pequeño que puede ser representado por una <see cref="T:Forconsol.Fraccion"/>.</returns>
        </member>
        <member name="P:Forconsol.Fraccion.Numerador">
            <summary>
            Obtiene el numerador representado por esta instancia.
            </summary>
            <returns>El numerador, en su forma simplificada si fue posible.</returns>
        </member>
        <member name="P:Forconsol.Fraccion.UnCuarto">
            <summary>
            Obtiene un objeto <see cref="T:Forconsol.Fraccion"/> que representa un cuarto (1 / 4).
            </summary>
            <returns>Un objeto cuyo valor es un cuarto.</returns>
        </member>
        <member name="P:Forconsol.Fraccion.UnEntero">
            <summary>
            Obtiene un objeto <see cref="T:Forconsol.Fraccion"/> que representa un entero (1 / 1).
            </summary>
            <returns>Un objeto cuyo valor es un entero.</returns>
        </member>
        <member name="P:Forconsol.Fraccion.UnMedio">
            <summary>
            Obtiene un objeto <see cref="T:Forconsol.Fraccion"/> que representa un medio (1 / 2).
            </summary>
            <returns>Un objeto cuyo valor es un medio.</returns>
        </member>
        <member name="P:Forconsol.Fraccion.UnTercio">
            <summary>
            Obtiene un objeto <see cref="T:Forconsol.Fraccion"/> que representa un tercio (1 / 3).
            </summary>
            <returns>Un objeto cuyo valor es un tercio.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.Abs(Forconsol.Fraccion)">
            <summary>
            Calcula el absoluto de un valor.
            </summary>
            <param name="fraccion">La fracción para la cual obtener su absoluto.</param>
            <returns>
            <para>
            El absoluto de
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            .
            </para>
            </returns>
            <exception cref="T:System.OverflowException"></exception>
        </member>
        <member name="M:Forconsol.Fraccion.CompareTo(Forconsol.Fraccion)">
            <summary>
            Compara esta instancia con una fracción especificada y devuelve una indicación de sus valores relativos.
            </summary>
            <param name="fraccion">Una fracción a comparar.</param>
            <returns>
            Un número con signo indicando los valores relativos de esta instancia y <paramref name="fraccion"/>.
            <list>
            <listheader>
            <term>Valor devuelto</term>
            <description>Descripción</description>
            </listheader>
            <item>
            <term>Menor que cero</term>
            <description>Esta instancia es menor que <paramref name="fraccion"/>.</description>
            </item>
            <item>
            <term>Cero</term>
            <description>Esta instancia es igual a <paramref name="fraccion"/>.</description>
            </item>
            <item>
            <term>Mayor que cero</term>
            <description>Esta instancia es mayor que <paramref name="fraccion"/>.</description>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.CompareTo(System.Object)">
            <summary>
            Compara esta instancia con un objeto especificado y devuelve una indicación de sus valores relativos.
            </summary>
            <param name="objeto">Un objeto a comparar, o null.</param>
            <returns>
            Un número con signo indicando los valores relativos de esta instancia y <paramref name="objeto"/>.
            <list>
            <listheader>
            <term>Valor devuelto</term>
            <description>Descripción</description>
            </listheader>
            <item>
            <term>Menor que cero</term>
            <description>Esta instancia es menor que <paramref name="objeto"/>.</description>
            </item>
            <item>
            <term>Cero</term>
            <description>Esta instancia es igual a <paramref name="objeto"/>.</description>
            </item>
            <item>
            <term>Mayor que cero</term>
            <description>Esta instancia es mayor que <paramref name="objeto"/>, u <paramref name="objeto"/> es <see langword="null"/>.</description>
            </item>
            </list>
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Forconsol.Fraccion.Equals(Forconsol.Fraccion)">
            <summary>
            Devuelve un valor que indica si la instancia actual y un objeto <see cref="T:Forconsol.Fraccion"/> especificado tienen el mismo valor.
            </summary>
            <param name="fraccion">El objeto a comparar.</param>
            <returns><see langword="true"/> si este objeto <see cref="T:Forconsol.Fraccion"/> y <paramref name="fraccion"/> tienen el mismo valor; en caso contrario, <see langword="false"/>.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.Equals(System.Object)">
            <summary>
            Devuelve un valor que indica si la instancia actual y un objeto especificado tienen el mismo valor.
            </summary>
            <param name="objeto">El objeto a comparar.</param>
            <returns><see langword="true"/> si el argumento <paramref name="objeto"/> es un objeto <see cref="T:Forconsol.Fraccion"/>, y su valor es igual al valor de la instancia <see cref="T:Forconsol.Fraccion"/> actual; en caso contrario, <see langword="false"/>.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.GetHashCode">
            <summary>
            Devuelve el código hash para el objeto <see cref="T:Forconsol.Fraccion"/> actual.
            </summary>
            <returns>Un código hash de tipo int.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.IsEvenInteger(Forconsol.Fraccion)">
            <summary>
            Determina si un valor representa un número entero par.
            </summary>
            <param name="fraccion">El valor a comprobar.</param>
            <returns>
            <para>
            <c>true</c>
            </para>
            <para>
            si
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            es un entero par; en caso contrario,
            </para>
            <para>
            <c>false</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.IsInteger(Forconsol.Fraccion)">
            <summary>
            Determina si un valor representa un valor entero.
            </summary>
            <param name="fraccion">El valor a comprobar.</param>
            <returns>
            <para>
            <c>true</c>
            </para>
            <para>
            si
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            es un entero; en caso contrario,
            </para>
            <para>
            <c>false</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.IsNegative(Forconsol.Fraccion)">
            <summary>
            Determina si el valor especificado es negativo.
            </summary>
            <param name="fraccion">Una fracción.</param>
            <returns><see langword="true"/> si el valor es negativo; <see langword="false"/> en caso contrario.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.IsOddInteger(Forconsol.Fraccion)">
            <summary>
            Determina si un valor representa un número entero impar.
            </summary>
            <param name="fraccion">El valor a comprobar.</param>
            <returns>
            <para>
            <c>true</c>
            </para>
            <para>
            si
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            es un entero impar; en caso contrario,
            </para>
            <para>
            <c>false</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.IsPositive(Forconsol.Fraccion)">
            <summary>
            Determina si un valor es positivo.
            </summary>
            <param name="fraccion">El valor a comprobar.</param>
            <returns>
            <para>
            <c>true</c>
            </para>
            <para>
            si
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            es positivo; en caso contrario,
            </para>
            <para>
            <c>false</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.Parse(System.String)">
            <summary>
            Convierte la representación en cadena de una fracción a su equivalente en fracción.
            </summary>
            <param name="cadenaFraccion">Una cadena que contiene una fracción a convertir.</param>
            <returns>Una fracción que es equivalente a la fracción especificada en <paramref name="cadenaFraccion"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.DivideByZeroException"></exception>
            <exception cref="T:System.FormatException"></exception>
            <exception cref="T:System.OverflowException"></exception>
        </member>
        <member name="M:Forconsol.Fraccion.Reciproco(Forconsol.Fraccion)">
            <summary>
            Calcula el recíproco de un valor.
            </summary>
            <param name="fraccion">La fracción para la cual obtener su recíproco.</param>
            <returns>
            <para>
            El recíproco de
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            .
            </para>
            </returns>
            <exception cref="T:System.DivideByZeroException"></exception>
        </member>
        <member name="M:Forconsol.Fraccion.ToString">
            <summary>
            Convierte la fracción de esta instancia a su representación en cadena equivalente.
            </summary>
            <returns>La representación en cadena del valor de esta instancia.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.TryParse(System.String,Forconsol.Fraccion@)">
            <summary>
            Convierte la representación en cadena de una fracción a su fracción equivalente. Un valor devuelto indica si la conversión tuvo éxito o falló.
            </summary>
            <param name="cadenaFraccion">Una cadena que contiene una fracción a convertir.</param>
            <param name="resultado">Cuando este método regresa, contiene a la fracción equivalente del parámetro cadenaFraccion, si la conversión tuvo éxito, o cero si la conversión falló. La conversión falla si el parámetro cadenaFraccion es null, no tiene el formato correcto, el numerador o el denominador desbordan el tipo int o el denominador es cero. Este parámetro pasa sin inicializar; cualquier valor suministrado originalmente en resultado será sobrescrito.</param>
            <returns><see langword="true"/> si <paramref name="cadenaFraccion"/> se convirtió con éxito; en caso contrario, <see langword="false"/>.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Addition(Forconsol.Fraccion,Forconsol.Fraccion)">
            <summary>
            Suma dos valores juntos para calcular su suma.
            </summary>
            <param name="sumando"></param>
            <param name="sumando1"></param>
            <returns>
            <para>
            La suma de
            </para>
            <para>
            <c>sumando</c>
            </para>
            <para>
            y
            </para>
            <para>
            <c>sumando1</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_CheckedAddition(Forconsol.Fraccion,Forconsol.Fraccion)">
            <summary>
            Suma dos valores juntos para calcular su suma.
            </summary>
            <param name="sumando"></param>
            <param name="sumando1"></param>
            <returns>
            <para>
            La suma de
            </para>
            <para>
            <c>sumando</c>
            </para>
            <para>
            y
            </para>
            <para>
            <c>sumando1</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_CheckedDecrement(Forconsol.Fraccion)">
            <summary>
            Decrementa un valor.
            </summary>
            <param name="fraccion"></param>
            <returns>
            <para>
            El resultado de decrementar
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_CheckedDivision(Forconsol.Fraccion,Forconsol.Fraccion)">
            <summary>
            Divide dos valores juntos para calcular su cociente.
            </summary>
            <param name="dividendo"></param>
            <param name="divisor"></param>
            <returns>
            <para>
            El cociente de
            </para>
            <para>
            <c>dividendo</c>
            </para>
            <para>
            dividido por
            </para>
            <para>
            <c>divisor</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_CheckedIncrement(Forconsol.Fraccion)">
            <summary>
            Incrementa un valor.
            </summary>
            <param name="fraccion"></param>
            <returns>
            <para>
            El resultado de incrementar
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_CheckedMultiply(Forconsol.Fraccion,Forconsol.Fraccion)">
            <summary>
            Multiplica dos valores juntos para calcular su producto.
            </summary>
            <param name="factor"></param>
            <param name="factor1"></param>
            <returns>
            <para>
            El producto de
            </para>
            <para>
            <c>factor</c>
            </para>
            <para>
            multiplicado por
            </para>
            <para>
            <c>factor1</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_CheckedSubtraction(Forconsol.Fraccion,Forconsol.Fraccion)">
            <summary>
            Resta dos valores para calcular su diferencia.
            </summary>
            <param name="minuendo"></param>
            <param name="sustraendo"></param>
            <returns>
            <para>
            La diferencia de
            </para>
            <para>
            <c>sustraendo</c>
            </para>
            <para>
            restado de
            </para>
            <para>
            <c>minuendo</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_CheckedUnaryNegation(Forconsol.Fraccion)">
            <summary>
            Calcula la negación unaria de un valor.
            </summary>
            <param name="fraccion"></param>
            <returns>
            <para>
            La negación unaria de
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Decrement(Forconsol.Fraccion)">
            <summary>
            Decrementa un valor.
            </summary>
            <param name="fraccion"></param>
            <returns>
            <para>
            El resultado de decrementar
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Division(Forconsol.Fraccion,Forconsol.Fraccion)">
            <summary>
            Divide dos valores juntos para calcular su cociente.
            </summary>
            <param name="dividendo"></param>
            <param name="divisor"></param>
            <returns>
            <para>
            El cociente de
            </para>
            <para>
            <c>dividendo</c>
            </para>
            <para>
            dividido por
            </para>
            <para>
            <c>divisor</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Equality(Forconsol.Fraccion,Forconsol.Fraccion)">
            <summary>
            Compara dos valores para determinar igualdad.
            </summary>
            <param name="fraccion"></param>
            <param name="fraccion1"></param>
            <returns>
            <para>
            <c>true</c>
            </para>
            <para>
            si
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            es igual a
            </para>
            <para>
            <c>fraccion1</c>
            </para>
            <para>
            ; en caso contrario,
            </para>
            <para>
            <c>false</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(System.Numerics.BigInteger)~Forconsol.Fraccion">
            <summary>
            Explícitamente convierte un valor <see cref="T:System.Numerics.BigInteger"/> a una fracción.
            </summary>
            <param name="entero">El valor a convertir.</param>
            <returns><paramref name="entero"/> convertido a una fracción.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(Forconsol.Fraccion)~System.Numerics.BigInteger">
            <summary>
            Explícitamente convierte una fracción a un valor <see cref="T:System.Numerics.BigInteger"/>.
            </summary>
            <param name="fraccion">El valor a convertir.</param>
            <returns><paramref name="fraccion"/> convertida a una BigInteger.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(Forconsol.Fraccion)~System.Byte">
            <summary>
            Explícitamente convierte una fracción a un valor <see cref="T:System.Byte"/>.
            </summary>
            <param name="fraccion">El valor a convertir.</param>
            <returns><paramref name="fraccion"/> convertida a una byte.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(Forconsol.Fraccion)~System.Char">
            <summary>
            Explícitamente convierte una fracción a un valor <see cref="T:System.Char"/>.
            </summary>
            <param name="fraccion">El valor a convertir.</param>
            <returns><paramref name="fraccion"/> convertida a una char.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(Forconsol.Fraccion)~System.Int128">
            <summary>
            Explícitamente convierte una fracción a un valor <see cref="T:System.Int128"/>.
            </summary>
            <param name="fraccion">El valor a convertir.</param>
            <returns><paramref name="fraccion"/> convertida a una Int128.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(Forconsol.Fraccion)~System.Int16">
            <summary>
            Explícitamente convierte una fracción a un valor <see cref="T:System.Int16"/>.
            </summary>
            <param name="fraccion">El valor a convertir.</param>
            <returns><paramref name="fraccion"/> convertida a una short.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(Forconsol.Fraccion)~System.Int32">
            <summary>
            Explícitamente convierte una fracción a un valor <see cref="T:System.Int32"/>.
            </summary>
            <param name="fraccion">El valor a convertir.</param>
            <returns><paramref name="fraccion"/> convertida a una int.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(Forconsol.Fraccion)~System.Int64">
            <summary>
            Explícitamente convierte una fracción a un valor <see cref="T:System.Int64"/>.
            </summary>
            <param name="fraccion">El valor a convertir.</param>
            <returns><paramref name="fraccion"/> convertida a una long.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(Forconsol.Fraccion)~System.IntPtr">
            <summary>
            Explícitamente convierte una fracción a un valor <see cref="T:System.IntPtr"/>.
            </summary>
            <param name="fraccion">El valor a convertir.</param>
            <returns><paramref name="fraccion"/> convertida a una nint.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(Forconsol.Fraccion)~System.SByte">
            <summary>
            Explícitamente convierte una fracción a un valor <see cref="T:System.SByte"/>.
            </summary>
            <param name="fraccion">El valor a convertir.</param>
            <returns><paramref name="fraccion"/> convertida a una sbyte.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(Forconsol.Fraccion)~System.UInt128">
            <summary>
            Explícitamente convierte una fracción a un valor <see cref="T:System.UInt128"/>.
            </summary>
            <param name="fraccion">El valor a convertir.</param>
            <returns><paramref name="fraccion"/> convertida a una UInt128.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(Forconsol.Fraccion)~System.UInt16">
            <summary>
            Explícitamente convierte una fracción a un valor <see cref="T:System.UInt16"/>.
            </summary>
            <param name="fraccion">El valor a convertir.</param>
            <returns><paramref name="fraccion"/> convertida a una ushort.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(Forconsol.Fraccion)~System.UInt32">
            <summary>
            Explícitamente convierte una fracción a un valor <see cref="T:System.UInt32"/>.
            </summary>
            <param name="fraccion">El valor a convertir.</param>
            <returns><paramref name="fraccion"/> convertida a una uint.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(Forconsol.Fraccion)~System.UInt64">
            <summary>
            Explícitamente convierte una fracción a un valor <see cref="T:System.UInt64"/>.
            </summary>
            <param name="fraccion">El valor a convertir.</param>
            <returns><paramref name="fraccion"/> convertida a una ulong.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(Forconsol.Fraccion)~System.UIntPtr">
            <summary>
            Explícitamente convierte una fracción a un valor <see cref="T:System.UIntPtr"/>.
            </summary>
            <param name="fraccion">El valor a convertir.</param>
            <returns><paramref name="fraccion"/> convertida a una nuint.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(System.Int128)~Forconsol.Fraccion">
            <summary>
            Explícitamente convierte un valor <see cref="T:System.Int128"/> a una fracción.
            </summary>
            <param name="entero">El valor a convertir.</param>
            <returns><paramref name="entero"/> convertido a una fracción.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(System.Int64)~Forconsol.Fraccion">
            <summary>
            Explícitamente convierte un valor <see cref="T:System.Int64"/> a una fracción.
            </summary>
            <param name="entero">El valor a convertir.</param>
            <returns><paramref name="entero"/> convertido a una fracción.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(System.IntPtr)~Forconsol.Fraccion">
            <summary>
            Explícitamente convierte un valor <see cref="T:System.IntPtr"/> a una fracción.
            </summary>
            <param name="entero">El valor a convertir.</param>
            <returns><paramref name="entero"/> convertido a una fracción.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(System.UInt128)~Forconsol.Fraccion">
            <summary>
            Explícitamente convierte un valor <see cref="T:System.UInt128"/> a una fracción.
            </summary>
            <param name="entero">El valor a convertir.</param>
            <returns><paramref name="entero"/> convertido a una fracción.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(System.UInt32)~Forconsol.Fraccion">
            <summary>
            Explícitamente convierte un valor <see cref="T:System.UInt32"/> a una fracción.
            </summary>
            <param name="entero">El valor a convertir.</param>
            <returns><paramref name="entero"/> convertido a una fracción.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(System.UInt64)~Forconsol.Fraccion">
            <summary>
            Explícitamente convierte un valor <see cref="T:System.UInt64"/> a una fracción.
            </summary>
            <param name="entero">El valor a convertir.</param>
            <returns><paramref name="entero"/> convertido a una fracción.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Explicit(System.UIntPtr)~Forconsol.Fraccion">
            <summary>
            Explícitamente convierte un valor <see cref="T:System.UIntPtr"/> a una fracción.
            </summary>
            <param name="entero">El valor a convertir.</param>
            <returns><paramref name="entero"/> convertido a una fracción.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_GreaterThan(Forconsol.Fraccion,Forconsol.Fraccion)">
            <summary>
            Compara dos valores para determinar cuál es mayor.
            </summary>
            <param name="fraccion"></param>
            <param name="fraccion1"></param>
            <returns>
            <para>
            <c>true</c>
            </para>
            <para>
            si
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            es mayor que
            </para>
            <para>
            <c>fraccion1</c>
            </para>
            <para>
            ; en caso contrario,
            </para>
            <para>
            <c>false</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_GreaterThanOrEqual(Forconsol.Fraccion,Forconsol.Fraccion)">
            <summary>
            Compara dos valores para determinar cuál es mayor o igual.
            </summary>
            <param name="fraccion"></param>
            <param name="fraccion1"></param>
            <returns>
            <para>
            <c>true</c>
            </para>
            <para>
            si
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            es mayor o igual a
            </para>
            <para>
            <c>fraccion1</c>
            </para>
            <para>
            ; en caso contrario,
            </para>
            <para>
            <c>false</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Implicit(System.Byte)~Forconsol.Fraccion">
            <summary>
            Implícitamente convierte un valor <see cref="T:System.Byte"/> a una fracción.
            </summary>
            <param name="entero">El valor a convertir.</param>
            <returns><paramref name="entero"/> convertido a una fracción.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Implicit(System.Char)~Forconsol.Fraccion">
            <summary>
            Implícitamente convierte un valor <see cref="T:System.Char"/> a una fracción.
            </summary>
            <param name="entero">El valor a convertir.</param>
            <returns><paramref name="entero"/> convertido a una fracción.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Implicit(System.Int16)~Forconsol.Fraccion">
            <summary>
            Implícitamente convierte un valor <see cref="T:System.Int16"/> a una fracción.
            </summary>
            <param name="entero">El valor a convertir.</param>
            <returns><paramref name="entero"/> convertido a una fracción.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Implicit(System.Int32)~Forconsol.Fraccion">
            <summary>
            Implícitamente convierte un valor <see cref="T:System.Int32"/> a una fracción.
            </summary>
            <param name="entero">El valor a convertir.</param>
            <returns><paramref name="entero"/> convertido a una fracción.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Implicit(System.SByte)~Forconsol.Fraccion">
            <summary>
            Implícitamente convierte un valor <see cref="T:System.SByte"/> a una fracción.
            </summary>
            <param name="entero">El valor a convertir.</param>
            <returns><paramref name="entero"/> convertido a una fracción.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Implicit(System.UInt16)~Forconsol.Fraccion">
            <summary>
            Implícitamente convierte un valor <see cref="T:System.UInt16"/> a una fracción.
            </summary>
            <param name="entero">El valor a convertir.</param>
            <returns><paramref name="entero"/> convertido a una fracción.</returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Increment(Forconsol.Fraccion)">
            <summary>
            Incrementa un valor.
            </summary>
            <param name="fraccion"></param>
            <returns>
            <para>
            El resultado de incrementar
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Inequality(Forconsol.Fraccion,Forconsol.Fraccion)">
            <summary>
            Compara dos valores para determinar desigualdad.
            </summary>
            <param name="fraccion"></param>
            <param name="fraccion1"></param>
            <returns>
            <para>
            <c>true</c>
            </para>
            <para>
            si
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            no es igual a
            </para>
            <para>
            <c>fraccion1</c>
            </para>
            <para>
            ; en caso contrario,
            </para>
            <para>
            <c>false</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_LessThan(Forconsol.Fraccion,Forconsol.Fraccion)">
            <summary>
            Compara dos valores para determinar cuál es menor.
            </summary>
            <param name="fraccion"></param>
            <param name="fraccion1"></param>
            <returns>
            <para>
            <c>true</c>
            </para>
            <para>
            si
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            es menor que
            </para>
            <para>
            <c>fraccion1</c>
            </para>
            <para>
            ; en caso contrario,
            </para>
            <para>
            <c>false</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_LessThanOrEqual(Forconsol.Fraccion,Forconsol.Fraccion)">
            <summary>
            Compara dos valores para determinar cuál es menor o igual.
            </summary>
            <param name="fraccion"></param>
            <param name="fraccion1"></param>
            <returns>
            <para>
            <c>true</c>
            </para>
            <para>
            si
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            es menor o igual a
            </para>
            <para>
            <c>fraccion1</c>
            </para>
            <para>
            ; en caso contrario,
            </para>
            <para>
            <c>false</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Modulus(Forconsol.Fraccion,Forconsol.Fraccion)">
            <summary>
            Divide dos valores juntos para calcular su módulo o residuo.
            </summary>
            <param name="dividendo"></param>
            <param name="divisor"></param>
            <returns>
            <para>
            El módulo o residuo de
            </para>
            <para>
            <c>dividendo</c>
            </para>
            <para>
            dividido por
            </para>
            <para>
            <c>divisor</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Multiply(Forconsol.Fraccion,Forconsol.Fraccion)">
            <summary>
            Multiplica dos valores juntos para calcular su producto.
            </summary>
            <param name="factor"></param>
            <param name="factor1"></param>
            <returns>
            <para>
            El producto de
            </para>
            <para>
            <c>factor</c>
            </para>
            <para>
            multiplicado por
            </para>
            <para>
            <c>factor1</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_Subtraction(Forconsol.Fraccion,Forconsol.Fraccion)">
            <summary>
            Resta dos valores para calcular su diferencia.
            </summary>
            <param name="minuendo"></param>
            <param name="sustraendo"></param>
            <returns>
            <para>
            La diferencia de
            </para>
            <para>
            <c>sustraendo</c>
            </para>
            <para>
            restado de
            </para>
            <para>
            <c>minuendo</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_UnaryNegation(Forconsol.Fraccion)">
            <summary>
            Calcula la negación unaria de un valor.
            </summary>
            <param name="fraccion"></param>
            <returns>
            <para>
            La negación unaria de
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="M:Forconsol.Fraccion.op_UnaryPlus(Forconsol.Fraccion)">
            <summary>
            Calcula el más unario de un valor.
            </summary>
            <param name="fraccion"></param>
            <returns>
            <para>
            El más unario de
            </para>
            <para>
            <c>fraccion</c>
            </para>
            <para>
            .
            </para>
            </returns>
        </member>
        <member name="T:Forconsol.IImprimible">
            <summary>
            Define un método generalizado que un value type o clase implementa para imprimir datos de una forma determinada.
            </summary>
        </member>
        <member name="M:Forconsol.IImprimible.Imprimir">
            <summary>
            Imprime los datos.
            </summary>
        </member>
        <member name="T:Forconsol.MensajeDeCarga">
            <summary>
            Representa una animación o mensaje de carga pensado para ser usado para operaciones que toman tiempo en completarse.
            </summary>
        </member>
        <member name="M:Forconsol.MensajeDeCarga.#ctor(System.String)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Forconsol.MensajeDeCarga"/> con un mensaje especificado.
            </summary>
            <param name="mensaje">Un mensaje pensado para avisarle al usuario algo.</param>
        </member>
        <member name="P:Forconsol.MensajeDeCarga.EstiloDeCarga">
            <summary>
            Obtiene o establece el estilo del mensaje de carga.
            </summary>
            <returns>Una <see cref="P:Forconsol.MensajeDeCarga.EstiloDeCarga"/> de la instancia actual. La predeterminada es puntos.</returns>
        </member>
        <member name="M:Forconsol.MensajeDeCarga.Start">
            <summary>
            Inicia el mensaje de carga imprimiendo dicho mensaje e iniciando una animación asíncrona.
            </summary>
        </member>
        <member name="M:Forconsol.MensajeDeCarga.Stop">
            <summary>
            Detiene la animación asíncrona del mensaje de carga.
            </summary>
        </member>
        <member name="T:Forconsol.EstiloDeCarga">
            <summary>
            Especifica constantes que definen un estilo de carga.
            </summary>
        </member>
        <member name="F:Forconsol.EstiloDeCarga.Puntos">
            <summary>
            El estilo puntos.
            </summary>
        </member>
        <member name="F:Forconsol.EstiloDeCarga.LineaRotatoria">
            <summary>
            El estilo línea rotatoria.
            </summary>
        </member>
        <member name="F:Forconsol.EstiloDeCarga.Lineas">
            <summary>
            El estilo líneas.
            </summary>
        </member>
        <member name="T:Forconsol.MenuDeOpciones">
            <summary>
            Representa un menú que solicita al usuario una opción a elegir y luego ejecuta dicha opción.
            </summary>
        </member>
        <member name="M:Forconsol.MenuDeOpciones.#ctor(System.Collections.Generic.Dictionary{System.String,System.Action})">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Forconsol.MenuDeOpciones"/> con un diccionario de opciones especificado.
            </summary>
            <param name="opciones">Un diccionario que almacena los rótulos y los procedimientos de las opciones a elegir.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Forconsol.MenuDeOpciones.#ctor(System.Collections.Generic.Dictionary{System.String,System.Action},System.Boolean)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Forconsol.MenuDeOpciones"/> con un diccionario de opciones especificado y si el menú contiene una opción de salir.
            </summary>
            <param name="opciones">Un diccionario que almacena los rótulos y los procedimientos de las opciones a elegir.</param>
            <param name="anadirOpcionDeSalir">true para añadir una opción de salir; en caso contrario, false.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Forconsol.MenuDeOpciones.AccionAntesDeDesplegarMenu">
            <summary>
            Obtiene o establece la acción antes de desplegar el menú, o null si ninguna fue suministrada.
            </summary>
            <returns>Una <see cref="T:System.Action"/> que se ejecuta antes de desplegar el menú.</returns>
        </member>
        <member name="P:Forconsol.MenuDeOpciones.AccionAntesDeSalir">
            <summary>
            Obtiene o establece la acción antes de salir del menú, o null si ninguna fue suministrada.
            </summary>
            <returns>Una <see cref="T:System.Action"/> que se ejecuta antes de salir del menú.</returns>
        </member>
        <member name="P:Forconsol.MenuDeOpciones.BorrarPantallaAntesDeIniciar">
            <summary>
            Obtiene o establece un valor indicando si se borra la pantalla antes de iniciar el menú.
            </summary>
            <returns><see langword="true"/> si se borra la pantalla antes de iniciar el menú; en caso contrario, <see langword="false"/>. El predeterminado es true.</returns>
        </member>
        <member name="P:Forconsol.MenuDeOpciones.BorrarPantallaAntesDeIniciarOpcion">
            <summary>
            Obtiene o establece un valor indicando si se borra la pantalla antes de iniciar una opción.
            </summary>
            <returns><see langword="true"/> si se borra la pantalla antes de iniciar una opción; en caso contrario, <see langword="false"/>. El predeterminado es false.</returns>
        </member>
        <member name="P:Forconsol.MenuDeOpciones.EstiloDeNumeracion">
            <summary>
            Obtiene o establece el estilo de numeración del menú.
            </summary>
            <returns>Una <see cref="P:Forconsol.MenuDeOpciones.EstiloDeNumeracion"/> de la instancia actual. La predeterminada es minúscula-paréntesis.</returns>
        </member>
        <member name="P:Forconsol.MenuDeOpciones.MensajeDeError">
            <summary>
            Obtiene o establece el mensaje de error del menú.
            </summary>
            <returns>Una <see cref="T:System.String"/> que se imprime cuando el usuario introduce una opción errónea.</returns>
        </member>
        <member name="P:Forconsol.MenuDeOpciones.MensajeDeFinDeOpcion">
            <summary>
            Obtiene o establece el mensaje de fin de opción del menú, o null si ninguno fue suministrado.
            </summary>
            <returns>Una <see cref="T:System.String"/> que se imprime cuando se finaliza una opción del menú. La predeterminada es "Presionar cualquier tecla para aceptar.".</returns>
        </member>
        <member name="P:Forconsol.MenuDeOpciones.MensajeDeSolicitudDeLetra">
            <summary>
            Obtiene o establece el mensaje de solicitud de letra del menú.
            </summary>
            <returns>Una <see cref="T:System.String"/> que se imprime cuando se solicita al usuario una letra de opción a elegir.</returns>
        </member>
        <member name="P:Forconsol.MenuDeOpciones.MensajeDeSolicitudDeNumero">
            <summary>
            Obtiene o establece el mensaje de solicitud de número del menú.
            </summary>
            <returns>Una <see cref="T:System.String"/> que se imprime cuando se solicita al usuario un número de opción a elegir.</returns>
        </member>
        <member name="P:Forconsol.MenuDeOpciones.RotuloOpcionDeSalir">
            <summary>
            Obtiene o establece el rótulo de la opción de salir del menú.
            </summary>
            <returns>Una <see cref="T:System.String"/> que representa el rótulo de la opción de salir del menú.</returns>
        </member>
        <member name="P:Forconsol.MenuDeOpciones.Titulo">
            <summary>
            Obtiene o establece el título del menú, o null si ninguno fue suministrado.
            </summary>
            <returns>Una <see cref="T:System.String"/> que se imprime como cabecera del menú. La predeterminada es "Menú de opciones" más un posible número de instancia.</returns>
        </member>
        <member name="M:Forconsol.MenuDeOpciones.Iniciar">
            <summary>
            Inicia el menú de opciones.
            </summary>
        </member>
        <member name="T:Forconsol.EstiloDeNumeracion">
            <summary>
            Especifica constantes que definen un estilo de numeración.
            </summary>
        </member>
        <member name="F:Forconsol.EstiloDeNumeracion.MinusculaParentesis">
            <summary>
            El estilo minúscula-paréntesis.
            </summary>
        </member>
        <member name="F:Forconsol.EstiloDeNumeracion.MayusculaParentesis">
            <summary>
            El estilo mayúscula-paréntesis.
            </summary>
        </member>
        <member name="F:Forconsol.EstiloDeNumeracion.MayusculaPunto">
            <summary>
            El estilo mayúscula-punto.
            </summary>
        </member>
        <member name="F:Forconsol.EstiloDeNumeracion.MinusculaPunto">
            <summary>
            El estilo minúscula-punto.
            </summary>
        </member>
        <member name="F:Forconsol.EstiloDeNumeracion.NumeroParentesis">
            <summary>
            El estilo número-paréntesis.
            </summary>
        </member>
        <member name="F:Forconsol.EstiloDeNumeracion.NumeroPunto">
            <summary>
            El estilo número-punto.
            </summary>
        </member>
        <member name="T:Forconsol.NumberType">
            <summary>
            Proporciona un par de métodos estáticos para determinar si un tipo predefinido es considerado parte de una clasificación de tipos numéricos. Esta clase no puede ser heredada.
            </summary>
        </member>
        <member name="M:Forconsol.NumberType.IsBinaryInteger(System.Type)">
            <summary>
            Determina si un tipo predefinido es un número entero.
            </summary>
            <param name="tipo">El tipo a comprobar.</param>
            <returns><see langword="true"/> si la <see cref="T:System.Type"/> es un número entero; en caso contrario, <see langword="false"/>.</returns>
        </member>
        <member name="M:Forconsol.NumberType.IsNumber(System.Type)">
            <summary>
            Determina si un tipo predefinido es un número.
            </summary>
            <param name="tipo">El tipo a comprobar.</param>
            <returns><see langword="true"/> si la <see cref="T:System.Type"/> es un número; en caso contrario, <see langword="false"/>.</returns>
        </member>
        <member name="T:Forconsol.NumeroPrimo">
            <summary>
            Representa un generador de números primos.
            </summary>
        </member>
        <member name="M:Forconsol.NumeroPrimo.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Forconsol.NumeroPrimo"/> lista para calcular números primos.
            </summary>
        </member>
        <member name="M:Forconsol.NumeroPrimo.Next">
            <summary>
            Devuelve el siguiente número primo.
            </summary>
            <returns>Un int primo.</returns>
        </member>
        <member name="M:Forconsol.NumeroPrimo.Reset">
            <summary>
            Reinicia esta instancia a su estado inicial.
            </summary>
        </member>
        <member name="T:Forconsol.NumeroRacional">
            <summary>
            Proporciona métodos estáticos para convertir números de coma flotante y fracciones. Esta clase no puede ser heredada.
            </summary>
        </member>
        <member name="M:Forconsol.NumeroRacional.GetDecimal(Forconsol.Fraccion)">
            <summary>
            Convierte una fracción en un decimal.
            </summary>
            <param name="fraccion">Una fracción a convertir.</param>
            <returns>Un decimal equivalente o aproximado al número contenido en <paramref name="fraccion"/>.</returns>
        </member>
        <member name="M:Forconsol.NumeroRacional.GetFraccion(System.Decimal)">
            <summary>
            Convierte un decimal en una fracción.
            </summary>
            <param name="decimal_">Un decimal a convertir.</param>
            <returns>Una fracción equivalente o aproximada al número contenido en <paramref name="decimal_"/>.</returns>
            <exception cref="T:System.OverflowException"></exception>
        </member>
        <member name="M:Forconsol.NumeroRacional.GetParteDecimal(System.Decimal)">
            <summary>
            Devuelve la parte decimal del decimal especificado.
            </summary>
            <param name="decimal_">El decimal para el cual obtener su parte decimal.</param>
            <returns>La parte decimal del decimal especificado.</returns>
        </member>
        <member name="M:Forconsol.NumeroRacional.GetParteDecimalSinCerosALaIzquierda(System.Decimal)">
            <summary>
            Devuelve la parte decimal sin ceros a la izquierda del decimal especificado.
            </summary>
            <param name="decimal_">El decimal para el cual obtener su parte decimal sin ceros a la izquierda.</param>
            <returns>La parte decimal sin ceros a la izquierda dek decimal especificado.</returns>
        </member>
        <member name="M:Forconsol.NumeroRacional.HasNotacionCientifica(System.Double)">
            <summary>
            Determina si un double tiene notación científica.
            </summary>
            <param name="real">El double a comprobar.</param>
            <returns><see langword="true"/> si la <see cref="T:System.Double"/> tiene notación científica; en caso contrario, <see langword="false"/>.</returns>
        </member>
        <member name="M:Forconsol.NumeroRacional.HasNotacionCientifica(System.Single)">
            <summary>
            Determina si un float tiene notación científica.
            </summary>
            <param name="real">El float a comprobar.</param>
            <returns><see langword="true"/> si la <see cref="T:System.Single"/> tiene notación científica; en caso contrario, <see langword="false"/>.</returns>
        </member>
        <member name="M:Forconsol.NumeroRacional.HasNotacionDecimal(System.Double)">
            <summary>
            Determina si un double tiene notación decimal.
            </summary>
            <param name="real">El double a comprobar.</param>
            <returns><see langword="true"/> si la <see cref="T:System.Double"/> tiene notación decimal; en caso contrario, <see langword="false"/>.</returns>
        </member>
        <member name="M:Forconsol.NumeroRacional.HasNotacionDecimal(System.Single)">
            <summary>
            Determina si un float tiene notación decimal.
            </summary>
            <param name="real">El float a comprobar.</param>
            <returns><see langword="true"/> si la <see cref="T:System.Single"/> tiene notación decimal; en caso contrario, <see langword="false"/>.</returns>
        </member>
        <member name="M:Forconsol.NumeroRacional.NotacionCientificaADecimal(System.Double)">
            <summary>
            Convierte un double expresado en notación científica a una cadena equivalente a la notación decimal de dicho double.
            </summary>
            <param name="real">Un double a convertir.</param>
            <returns>Una cadena equivalente a la notación decimal de <paramref name="real"/>.</returns>
        </member>
        <member name="M:Forconsol.NumeroRacional.NotacionCientificaADecimal(System.Single)">
            <summary>
            Convierte un float expresado en notación científica a una cadena equivalente a la notación decimal de dicho float.
            </summary>
            <param name="real">Un float a convertir.</param>
            <returns>Una cadena equivalente a la notación decimal de <paramref name="real"/>.</returns>
        </member>
        <member name="M:Forconsol.NumeroRacional.NotacionCientificaADecimal(System.String)">
            <summary>
            Convierte la representación en cadena de un número de coma flotante expresado en notación científica a una cadena equivalente o aproximada a la notación decimal de dicho número.
            </summary>
            <param name="real">Una cadena a convertir.</param>
            <returns>Una cadena equivalente o aproximada a la notación decimal de <paramref name="real"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:Forconsol.NumeroRacional.NotacionDecimalACientifica(System.Double)">
            <summary>
            Convierte un double expresado en notación decimal a una cadena equivalente a la notación científica de dicho double.
            </summary>
            <param name="real">Un double a convertir.</param>
            <returns>Una cadena equivalente a la notación científica de <paramref name="real"/>.</returns>
        </member>
        <member name="M:Forconsol.NumeroRacional.NotacionDecimalACientifica(System.Single)">
            <summary>
            Convierte un float expresado en notación decimal a una cadena equivalente a la notación científica de dicho float.
            </summary>
            <param name="real">Un float a convertir.</param>
            <returns>Una cadena equivalente a la notación científica de <paramref name="real"/>.</returns>
        </member>
        <member name="M:Forconsol.NumeroRacional.NotacionDecimalACientifica(System.String)">
            <summary>
            Convierte la representación en cadena de un número de coma flotante expresado en notación decimal a una cadena equivalente o aproximada a la notación científica de dicho número.
            </summary>
            <param name="real">Una cadena a convertir.</param>
            <returns>Una cadena equivalente o aproximada a la notación científica de <paramref name="real"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="T:Forconsol.SolicitudDeEntrada`1">
            <summary>
            Representa una solicitud de entrada de un valor por el usuario y proporciona un mecanismo para que dicho valor siempre sea el correcto.
            </summary>
            <typeparam name="TResultado">El tipo de la entrada a solicitar.</typeparam>
        </member>
        <member name="M:Forconsol.SolicitudDeEntrada`1.#ctor(Forconsol.MetodoParse{`0})">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Forconsol.SolicitudDeEntrada`1"/> con un método Parse o similar especificado.
            </summary>
            <param name="metodo">El delegado que representa el código que convierte una cadena a <typeparamref name="TResultado"/>.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Forconsol.SolicitudDeEntrada`1.#ctor(Forconsol.MetodoTryParse{`0})">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Forconsol.SolicitudDeEntrada`1"/> con un método TryParse o similar especificado.
            </summary>
            <param name="metodo">El delegado que representa el código que convierte una cadena, asigna una variable <typeparamref name="TResultado"/> y devuelve un bool.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Forconsol.SolicitudDeEntrada`1.Condicion">
            <summary>
            Obtiene o establece la condición, o null si ninguna fue suministrada.
            </summary>
            <returns>Una <see cref="T:System.Predicate`1"/> que se aplica al validar la entrada del usuario.</returns>
        </member>
        <member name="P:Forconsol.SolicitudDeEntrada`1.MensajeDeError">
            <summary>
            Obtiene o establece el mensaje de error de la solicitud.
            </summary>
            <returns>Una <see cref="T:System.String"/> que se imprime cuando la entrada del usuario no es válida.</returns>
        </member>
        <member name="P:Forconsol.SolicitudDeEntrada`1.MensajeDeSolicitud">
            <summary>
            Obtiene o establece el mensaje de solicitud de entrada.
            </summary>
            <returns>Una <see cref="T:System.String"/> que se imprime cuando se solicita al usuario una entrada.</returns>
        </member>
        <member name="M:Forconsol.SolicitudDeEntrada`1.Solicitar(`0@)">
            <summary>
            Solicita la entrada.
            </summary>
            <param name="variable">Una variable donde se asigna la entrada.</param>
        </member>
        <member name="T:Forconsol.MetodoParse`1">
            <summary>
            Encapsula un método que acepta como argumento la representación en cadena de una instancia y que devuelve dicha cadena convertida a <typeparamref name="TResultado"/>.
            </summary>
            <typeparam name="TResultado">El tipo del valor devuelto del método que este delegado encapsula.</typeparam>
            <param name="cadenaTResultado">Una cadena que contiene una instancia a convertir.</param>
            <returns>El valor devuelto del método que este delegado encapsula.</returns>
        </member>
        <member name="T:Forconsol.MetodoTryParse`1">
            <summary>
            Encapsula un método que acepta como argumentos la representación en cadena de una instancia y una variable de salida con dicha instancia; el método devuelve un bool.
            </summary>
            <typeparam name="TResultado">El tipo de la variable de salida del método que este delegado encapsula.</typeparam>
            <param name="cadenaTResultado">Una cadena que contiene una instancia a convertir.</param>
            <param name="variable">Una variable donde se asigna la instancia.</param>
            <returns><see langword="true"/> si <paramref name="cadenaTResultado"/> se convirtió con éxito; en caso contrario, <see langword="false"/>.</returns>
        </member>
        <member name="T:Forconsol.TablaImprimible`1">
            <summary>
            Representa una tabla de objetos que se puede imprimir en consola.
            </summary>
            <typeparam name="T">El tipo de los elementos de la tabla.</typeparam>
        </member>
        <member name="M:Forconsol.TablaImprimible`1.#ctor(`0[0:,0:])">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Forconsol.TablaImprimible`1"/> con una tabla especificada.
            </summary>
            <param name="tabla">Un arreglo bidimensional.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Forconsol.TablaImprimible`1.AlineacionDeElementos">
            <summary>
            Obtiene o establece la alineación de los elementos convertidos a cadena.
            </summary>
            <returns>Una <see cref="P:Forconsol.TablaImprimible`1.AlineacionDeElementos"/> de la instancia actual. La predeterminada es derecha si el tipo predefinido de los elementos de la tabla es un número.</returns>
        </member>
        <member name="P:Forconsol.TablaImprimible`1.Separadores">
            <summary>
            Obtiene o establece un valor indicando si la tabla muestra separadores de celdas.
            </summary>
            <returns><see langword="true"/> si la tabla muestra separadores de celdas; en caso contrario, <see langword="false"/>. El predeterminado es false.</returns>
        </member>
        <member name="M:Forconsol.TablaImprimible`1.Imprimir">
            <summary>
            Imprime la tabla en consola.
            </summary>
        </member>
        <member name="T:Forconsol.AlineacionDeElementos">
            <summary>
            Especifica constantes que definen una alineación de elementos.
            </summary>
        </member>
        <member name="F:Forconsol.AlineacionDeElementos.Izquierda">
            <summary>
            Alineación a la izquierda.
            </summary>
        </member>
        <member name="F:Forconsol.AlineacionDeElementos.Derecha">
            <summary>
            Alineación a la derecha.
            </summary>
        </member>
        <member name="T:Forconsol.TablaTransporteImprimible`1">
            <summary>
            Representa una tabla de transporte que se puede imprimir en consola.
            </summary>
            <typeparam name="T">El tipo de los elementos de la tabla.</typeparam>
        </member>
        <member name="M:Forconsol.TablaTransporteImprimible`1.#ctor(`0[0:,0:])">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Forconsol.TablaTransporteImprimible`1"/> con una tabla especificada.
            </summary>
            <param name="tabla">Un arreglo bidimensional.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Forconsol.TablaTransporteImprimible`1.Imprimir">
            <summary>
            Imprime la tabla de transporte en consola.
            </summary>
        </member>
    </members>
</doc>
